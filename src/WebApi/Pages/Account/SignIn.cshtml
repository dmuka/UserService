@page
@using WebApi.Pages
@model WebApi.Pages.Account.SignInModel
@{
    ViewData["Title"] = "Sign in";
}

<link rel="stylesheet" href="~/css/site.css" />

<div class="center-container">
    <div class="form-container">
        <section>
            <form id="signInForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">
                @Html.AntiForgeryToken()
                <h2>Sign in</h2>
                <hr/>
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="mb-3">
                    <label class="form-label">Sign in using:</label>
                    <select id="signInOption" class="form-select" onchange="toggleInputField()">
                        <option value="email">Email</option>
                        <option value="username" selected>Username</option>
                    </select>
                </div>

                <div id="emailInput" style="display: none">
                    <div class="form-floating mb-3">
                        <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true"/>
                        <label asp-for="Input.Email">Email address</label>
                        <span asp-validation-for="Input.Email" class="text-danger"></span>
                    </div>
                </div>

                <div id="usernameInput" style="display: block">
                    <div class="form-floating mb-3">
                        <input asp-for="Input.UserName" name="Input.UserName" class="form-control" autocomplete="username" aria-required="true"/>
                        <label asp-for="Input.UserName" class="form-label">User name</label>
                        <span asp-validation-for="Input.UserName" class="text-danger"></span>
                    </div>
                </div>

                <div class="form-floating mb-3">
                    <input asp-for="Input.Password" name="Input.Password" type="password" class="form-control" autocomplete="current-password" aria-required="true"/>
                    <label asp-for="Input.Password" class="form-label">Password</label>
                    <span asp-validation-for="Input.Password" class="text-danger"></span>

                    <a href="#" class="password-icon-overlay">
                        <i class="fa fa-eye-slash" aria-hidden="true"></i>
                    </a>
                </div>
                
                @if (Model.ShowRecoveryCodeOption)
                {
                    <div class="form-group">
                        <label>Verification Code</label>
                        <div class="mfa-code-inputs">
                            <input type="text" class="mfa-digit" maxlength="1" name="digit1" value="@(Model.Input.VerificationCode?.Length > 0 ? Model.Input.VerificationCode[0].ToString() : "")" autocomplete="off" />
                            <input type="text" class="mfa-digit" maxlength="1" name="digit2" value="@(Model.Input.VerificationCode?.Length > 0 ? Model.Input.VerificationCode[1].ToString() : "")" autocomplete="off" />
                            <input type="text" class="mfa-digit" maxlength="1" name="digit3" value="@(Model.Input.VerificationCode?.Length > 0 ? Model.Input.VerificationCode[2].ToString() : "")" autocomplete="off" />
                            <input type="text" class="mfa-digit" maxlength="1" name="digit4" value="@(Model.Input.VerificationCode?.Length > 0 ? Model.Input.VerificationCode[3].ToString() : "")" autocomplete="off" />
                            <input type="text" class="mfa-digit" maxlength="1" name="digit5" value="@(Model.Input.VerificationCode?.Length > 0 ? Model.Input.VerificationCode[4].ToString() : "")" autocomplete="off" />
                            <input type="text" class="mfa-digit" maxlength="1" name="digit6" value="@(Model.Input.VerificationCode?.Length > 0 ? Model.Input.VerificationCode[5].ToString() : "")" autocomplete="off" />
                            <input type="hidden" asp-for="Input.VerificationCode" id="VerificationCode" />
                        </div>
                        <span asp-validation-for="Input.VerificationCode" class="text-danger"></span>
                    </div>
                    <div class="form-floating mb-3">
                        <label asp-for="Input.RecoveryCode">Or Enter a Recovery Code</label>
                        <input asp-for="Input.RecoveryCode" class="form-control" placeholder="Enter recovery code" />
                        <span asp-validation-for="Input.RecoveryCode" class="text-danger"></span>
                    </div>
                }
                
                <div class="checkbox mb-3">
                    <label asp-for="Input.RememberMe" class="form-label">
                        <input class="form-check-input" type="checkbox" asp-for="Input.RememberMe"/>
                        @Html.DisplayNameFor(m => m.Input.RememberMe)
                    </label>
                </div>
                <div class="button-container">
                    <button id="sign-in-submit" type="submit" class="w-25 btn btn-lg btn-primary">Sign in</button>
                    <button id="sign-up" type="button" class="w-25 btn btn-lg btn-secondary" onclick='redirectToSignUpWithCallback("@(Model.ReturnUrl ?? "")")'>Sign up</button>
                </div>
                <div class="mt-3">
                    <p>
                        <a asp-page="@Routes.ForgotPassword" aria-label="Forgot your password">Forgot your password?</a>
                    </p>
                </div>
            </form>
        </section>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial"/>
    <partial name="_PasswordIconScriptsPartial"/>
    <partial name="_RedirectScriptsPartial"/>
    
    <script>
        function toggleInputField() {
            let option = document.getElementById("signInOption").value;
            document.getElementById("emailInput").style.display = (option === "email") ? "block" : "none";
            document.getElementById("usernameInput").style.display = (option === "username") ? "block" : "none";
        }

        document.addEventListener('DOMContentLoaded', () => {
            const digitInputs = document.querySelectorAll('.mfa-digit');
            const hiddenInput = document.getElementById('VerificationCode');

            digitInputs.forEach((input, index) => {
                input.addEventListener('input', () => {
                    if (input.value.length === 1 && index < digitInputs.length - 1) {
                        digitInputs[index + 1].focus();
                    }
                    updateHiddenInput();
                });

                input.addEventListener('keydown', (e) => {
                    if (e.key === 'Backspace' && input.value === '' && index > 0) {
                        digitInputs[index - 1].focus();
                    }
                });

                input.addEventListener('paste', (e) => {
                    e.preventDefault();
                    const pastedData = e.clipboardData.getData('text').replace(/\D/g, '');
                    if (pastedData.length > 0) {
                        for (let i = 0; i < digitInputs.length && i < pastedData.length; i++) {
                            digitInputs[i].value = pastedData[i];
                        }
                        if (pastedData.length <= digitInputs.length) {
                            digitInputs[Math.min(pastedData.length, digitInputs.length - 1)].focus();
                        }
                        updateHiddenInput();
                    }
                });
            });

            function updateHiddenInput() {
                hiddenInput.value = Array.from(digitInputs).map(input => input.value).join('');
            }

            updateHiddenInput();
        });
    </script>
}